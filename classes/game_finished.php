<?php

namespace mod_mooduell;

use \mod_mooduell\mooduell;

/**
 * Class game_finished contains functions to execute when the event game_finished is triggered
 * @package mod_mooduell
 */
class game_finished
{
    /**
     * @var null mooduellid
     */
    var $mooduellid = null;

    /**
     * Function to update the highscores table after a game has been finished.
     * First, all highscore entries of the current MooDuell instance will be removed from the table.
     * After that, they will be generated by the get_highscores function in mooduell.php and inserted again
     *
     * @param $mooduellid the id of the current MooDuell instance
     */
    public static function update_highscores_table($cmid){
        global $DB;

        $mooduell = new mooduell($cmid);
        $mooduellid = $mooduell->cm->instance;

        // at first, delete old highscores for the MooDuell instance
        $DB->delete_records('mooduell_highscores', ['mooduellid' => $mooduellid]);

        $list_of_highscores = mooduell::get_highscores($mooduellid);

        $returnarray = [];
        foreach ($list_of_highscores as $entry){
            $entry = (object) $entry;
            $returnarray[] = [
                'mooduellid' => $mooduellid,
                'userid' => $entry->userid,
                'ranking' => $entry->rank,
                //'username' => $mooduell->return_name_by_id($entry->userid), //this should be done later
                'gamesplayed' => $entry->played,
                'gameswon' => $entry->won,
                'gameslost' => $entry->lost,
                'gamesstarted' => 0, //TODO: add this later
                'gamesfinished' => 0, //TODO: add this later
                'score' => $entry->score,
                'qcorrect' => $entry->correct,
                'qplayed'  => $entry->qplayed,
                //'correctpercentage' => $entry->correctpercentage, //this should be done later
                'timecreated' => time(),
                'timemodified' => time()
            ];
        }
        // now sort the returned array by score
        usort($returnarray, $mooduell->build_sorter('score'));

        $dataobjects = [];
        // now add each entry to the mooduell_highscores table
        foreach ($returnarray as $entry) {
            $entry = (object) $entry;
            $dataobjects[] = $entry;
        }
        $DB->insert_records('mooduell_highscores', $dataobjects);
    }
}