<?php

namespace mod_mooduell;

use \mod_mooduell\mooduell;

/**
 * Class game_finished contains functions to execute when the event game_finished is triggered
 * @package mod_mooduell
 */
class game_finished
{
    /**
     * @var null mooduellid
     */
    var $mooduellid = null;

    /**
     * Function to update the highscores table after a game has been finished.
     * First, all highscore entries of the current MooDuell instance will be removed from the table.
     * After that, they will be generated by the get_highscores function in mooduell.php and inserted again
     *
     * @param $cmid course module id will be used to instantiate mooduell-class / caution: this is not the mooduellid
     */
    public static function update_highscores_table($cmid){
        global $DB;

        $mooduell = new mooduell($cmid);
        $mooduellid = $mooduell->cm->instance; // THIS is the correct mooduellid

        $list_of_highscores = mooduell::get_highscores($mooduellid);

        $returnarray = [];
        foreach ($list_of_highscores as $entry){
            $entry = (object) $entry;
            $returnarray[] = [
                'mooduellid' => $mooduellid,
                'userid' => $entry->userid,
                'ranking' => $entry->rank,
                'gamesplayed' => $entry->played,
                'gameswon' => $entry->won,
                'gameslost' => $entry->lost,
                'gamesstarted' => 0, //TODO: this will be added later
                'gamesfinished' => 0, //TODO: this will be added later
                'score' => $entry->score,
                'qcorrect' => $entry->correct,
                'qplayed'  => $entry->qplayed,
                'qcpercentage' => $entry->correctpercentage,
                'timecreated' => time(),
                'timemodified' => time()
            ];
        }
        // sort the returned array by score
        usort($returnarray, $mooduell->build_sorter('score'));

        // update or insert each entry into the mooduell_highscores table
        foreach ($returnarray as $entry) {
            $entry = (object) $entry;

            // let's have a look if the entry already exists in the DB
            $sql = 'select * from {mooduell_highscores} where mooduellid = '.$entry->mooduellid.' and userid = '.$entry->userid;
            $data = $DB->get_record_sql($sql);

            // if the entry could be found in the database
            if (!empty($data)){
                // ... then update the existing record
                $entry->id = $data->id;
                $entry->timecreated = $data->timecreated;
                $entry->timemodified = time();
                $DB->update_record('mooduell_highscores', $entry);
            }
            // otherwise, insert a new record
            else {
                $DB->insert_record('mooduell_highscores', $entry);
            }
        }
    }
}